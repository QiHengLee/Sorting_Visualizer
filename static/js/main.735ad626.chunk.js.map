{"version":3,"sources":["SortingAlgorithm/mergeSort.js","SortingAlgorithm/quickSort.js","SortingAlgorithm/heapSort.js","SortingVisualizer/SortingVisualizer.js","SortingAlgorithm/bubbleSort.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getQuickSortAnimations","quickSort","low","high","pi","pivot","temp","partition","heapify","start","largest","l","r","SortingVisualizer","props","state","width","window","innerWidth","speed","height","innerHeight","this","resetArray","max","min","random","setState","setTimeout","bar","arrayBars","document","getElementsByClassName","console","log","style","backgroundColor","getBubbleSortAnimations","finishSort","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","newHeight","getHeapSortAnimations","Navbar","id","bg","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","onClick","mergeSort","bubbleSort","heapSort","NavDropdown","title","Item","map","value","idx","key","React","Component","App","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.735ad626.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) {\n    return array;\n  }\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  if (startIdx === endIdx) {\n    return;\n  }\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","export function getQuickSortAnimations(array) {\n  const animations = [];\n  const length = array.length;\n  quickSort(array, 0, length - 1, animations);\n  return animations;\n}\n\nfunction quickSort(array, low, high, animations) {\n  if (low < high) {\n    var pi = partition(array, low, high, animations);\n\n    quickSort(array, low, pi - 1, animations);\n    quickSort(array, pi + 1, high, animations);\n  }\n}\n\nfunction partition(array, low, high, animations) {\n  var pivot = array[high];\n  var i = low - 1;\n  for (var j = low; j < high; j++) {\n    animations.push([j, high]);\n    animations.push([j, high]);\n    if (array[j] < pivot) {\n      i++;\n      animations.push([j, array[i]]);\n      animations.push([i, array[j]]);\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    } else {\n      animations.push([j, array[j]]);\n      animations.push([high, array[high]]);\n    }\n  }\n  animations.push([i + 1, high]);\n  animations.push([i + 1, high]);\n  animations.push([i + 1, array[high]]);\n  animations.push([high, array[i + 1]]);\n  temp = array[i + 1];\n  array[i + 1] = array[high];\n  array[high] = temp;\n\n  return i + 1;\n}\n","export function getHeapSortAnimations(array) {\n  const animations = [];\n  const length = array.length;\n  for (var i = length / 2 - 1; i >= 0; i--) {\n    heapify(array, length, i, animations);\n  }\n\n  for (var j = length - 1; j > 0; j--) {\n    animations.push([0, j]);\n    animations.push([0, j]);\n    animations.push([0, j]);\n    animations.push([0, j]);\n    animations.push([0, array[j]]);\n    animations.push([j, array[0]]);\n    var temp = array[0];\n    array[0] = array[j];\n    array[j] = temp;\n\n    heapify(array, j, 0, animations);\n  }\n  return animations;\n}\n\nfunction heapify(array, length, start, animations) {\n  var largest = start;\n  var l = 2 * start + 1;\n  var r = 2 * start + 2;\n\n  if (l < length) {\n    animations.push([l, largest]);\n    animations.push([l, largest]);\n    if (array[l] > array[largest]) {\n      largest = l;\n    }\n  } else {\n    animations.push([largest, largest]);\n    animations.push([largest, largest]);\n  }\n\n  if (r < length) {\n    animations.push([r, largest]);\n    animations.push([r, largest]);\n    if (array[r] > array[largest]) {\n      largest = r;\n    }\n  } else {\n    animations.push([largest, largest]);\n    animations.push([largest, largest]);\n  }\n\n  if (largest !== start) {\n    animations.push([start, array[largest]]);\n    animations.push([largest, array[start]]);\n    var temp = array[start];\n    array[start] = array[largest];\n    array[largest] = temp;\n\n    heapify(array, length, largest, animations);\n  } else {\n    animations.push([start, array[start]]);\n    animations.push([largest, array[largest]]);\n  }\n}\n","import React from \"react\";\nimport \"./SortingVisualizer.css\";\nimport { getMergeSortAnimations } from \"../SortingAlgorithm/mergeSort\";\nimport { getBubbleSortAnimations } from \"../SortingAlgorithm/bubbleSort\";\nimport { getQuickSortAnimations } from \"../SortingAlgorithm/quickSort\";\nimport { getHeapSortAnimations } from \"../SortingAlgorithm/heapSort\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n      width: Math.floor(window.innerWidth / 220),\n      length: 150,\n      speed: 1,\n      height: Math.floor(window.innerHeight) - 70,\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < this.state.length; i++) {\n      array.push(randomRange(5, this.state.height));\n    }\n    this.setState({ array });\n  }\n\n  finishSort() {\n    for (var i = 0; i < this.state.length; i++) {\n      setTimeout(\n        (bar) => {\n          const arrayBars = document.getElementsByClassName(\"bar\");\n          console.log(bar);\n          const barStyle = arrayBars[bar].style;\n          barStyle.backgroundColor = \"lightgreen\";\n        },\n        i * this.state.speed,\n        i\n      );\n    }\n  }\n\n  bubbleSort() {\n    const animations = getBubbleSortAnimations(this.state.array);\n    for (let i = 0; i <= animations.length; i++) {\n      if (i === animations.length) {\n        setTimeout(() => {\n          this.finishSort();\n        }, i * this.state.speed);\n        return;\n      }\n      setTimeout(() => {\n        const arrayBars = document.getElementsByClassName(\"bar\");\n        const isColorChange = i % 4 === 0 || i % 4 === 1;\n        if (isColorChange) {\n          const [barOneIdx, barTwoIdx] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const barTwoStyle = arrayBars[barTwoIdx].style;\n          const color = i % 4 === 0 ? \"red\" : \"lightblue\";\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        } else {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }\n      }, i * this.state.speed);\n    }\n  }\n\n  quickSort() {\n    const animations = getQuickSortAnimations(this.state.array);\n    console.log(animations);\n    for (let i = 0; i <= animations.length; i++) {\n      if (i === animations.length) {\n        setTimeout(() => {\n          this.finishSort();\n        }, i * this.state.speed);\n        return;\n      }\n      setTimeout(() => {\n        const arrayBars = document.getElementsByClassName(\"bar\");\n        const isColorChange = i % 4 === 0 || i % 4 === 1;\n        if (isColorChange) {\n          const [barOneIdx, barTwoIdx] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const barTwoStyle = arrayBars[barTwoIdx].style;\n          const color = i % 4 === 0 ? \"red\" : \"lightblue\";\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        } else {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }\n      }, i * this.state.speed);\n    }\n  }\n\n  mergeSort() {\n    const animations = getMergeSortAnimations(this.state.array);\n    for (let i = 0; i <= animations.length; i++) {\n      if (i === animations.length) {\n        setTimeout(() => {\n          this.finishSort();\n        }, i * this.state.speed);\n        return;\n      }\n      const arrayBars = document.getElementsByClassName(\"bar\");\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? \"red\" : \"lightblue\";\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.speed);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * this.state.speed);\n      }\n    }\n  }\n\n  heapSort() {\n    const animations = getHeapSortAnimations(this.state.array);\n    console.log(animations);\n    for (let i = 0; i <= animations.length; i++) {\n      if (i === animations.length) {\n        setTimeout(() => {\n          this.finishSort();\n        }, i * this.state.speed);\n        return;\n      }\n      setTimeout(() => {\n        const arrayBars = document.getElementsByClassName(\"bar\");\n        const isColorChange = i % 6 === 4 || i % 6 === 5;\n        if (isColorChange) {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        } else {\n          const [barOneIdx, barTwoIdx] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const barTwoStyle = arrayBars[barTwoIdx].style;\n          const color = i % 6 === 0 || i % 6 === 2 ? \"red\" : \"lightblue\";\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }\n      }, i * this.state.speed);\n    }\n  }\n\n  render() {\n    const { array, width } = this.state;\n    return (\n      <>\n        <Navbar id=\"navbar\" bg=\"light\">\n          <Navbar.Brand>Pathfinding Visualizer</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link id=\"speedInfo\">Speed : Average</Nav.Link>\n              <Nav.Link onClick={() => this.mergeSort()}>MergeSort</Nav.Link>\n              <Nav.Link onClick={() => this.bubbleSort()}>BubbleSort</Nav.Link>\n              <Nav.Link onClick={() => this.quickSort()}>QuickSort</Nav.Link>\n              <Nav.Link onClick={() => this.heapSort()}>HeapSort</Nav.Link>\n              <NavDropdown title=\"Speed\">\n                <NavDropdown.Item>Slow</NavDropdown.Item>\n                <NavDropdown.Item>Average</NavDropdown.Item>\n                <NavDropdown.Item>Fast</NavDropdown.Item>\n              </NavDropdown>\n              <Nav.Link onClick={() => this.resetArray()}>Regenerate</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <div className=\"arrayContainer\">\n          {array.map((value, idx) => (\n            <div\n              key={idx}\n              className=\"bar\"\n              style={{ height: value, width: width }}\n            ></div>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SortingVisualizer;\n\nfunction randomRange(max, min) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export function getBubbleSortAnimations(array) {\n  const animations = [];\n  const length = array.length;\n  for (var i = 0; i < length - 1; i++) {\n    for (var j = 0; j < length - i - 1; j++) {\n      animations.push([j, j + 1]);\n      animations.push([j, j + 1]);\n      if (array[j] > array[j + 1]) {\n        animations.push([j, array[j + 1]]);\n        animations.push([j + 1, array[j]]);\n        var temp = array[j + 1];\n        array[j + 1] = array[j];\n        array[j] = temp;\n      } else {\n        animations.push([j, array[j]]);\n        animations.push([j + 1, array[j + 1]]);\n      }\n    }\n  }\n  return animations;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <SortingVisualizer></SortingVisualizer>\n        );\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n)"],"sourceRoot":""}